#!/command/with-contenv bashio
# ==============================================================================
# Home Assistant Community Add-on: Spotify Connect
# Runs librespot
# ==============================================================================
declare -a options
declare bitrate
declare name
declare password
declare username
declare cache_size_limit
declare disable_audio_cache
declare device_type
declare backend
declare device
declare format
declare dither
declare initial_volume
declare enable_volume_normalisation
declare autoplay

bashio::log.info 'Starting the Spotify daemon...'

# Bitrate
if bashio::config.has_value 'bitrate'; then
    bitrate=$(bashio::config 'bitrate')
    options+=(--bitrate "${bitrate}")
fi

# Device name
if bashio::config.has_value 'name'; then
    name=$(bashio::config 'name')
    options+=(--name "${name}")
fi

# Username / password
if bashio::config.has_value 'username'; then
    bashio::config.require.password
    username=$(bashio::config 'username')
    password=$(bashio::config 'password')
    options+=(--username "${username}")
    options+=(--password "${password}")
fi

# Cache size limit
if bashio::config.has_value 'cache-size-limit'; then
    cache_size_limit=$(bashio::config 'cache-size-limit')
    if [[ "$cache_size_limit" =~ ^[0-9]+[KMG]?$ ]]; then
        options+=(--cache-size-limit "${cache_size_limit}")
    else
        bashio::log.warning "Invalid cache-size-limit, using default of 1M"
        options+=(--cache-size-limit "1M")
    fi
fi

# Disable audio cache
if bashio::config.has_value 'disable-audio-cache' && bashio::config.true 'disable-audio-cache'; then
    options+=(--disable-audio-cache)
fi

# Device type
if bashio::config.has_value 'device-type'; then
    device_type=$(bashio::config 'device-type')
    options+=(--device-type "${device_type}")
fi

# Backend
if bashio::config.has_value 'backend'; then
    backend=$(bashio::config 'backend')
    options+=(--backend "${backend}")
fi

# Device
if bashio::config.has_value 'device'; then
    device=$(bashio::config 'device')
    options+=(--device "${device}")
fi

# Format
if bashio::config.has_value 'format'; then
    format=$(bashio::config 'format')
    options+=(--format "${format}")
fi

# Dither
if bashio::config.has_value 'dither'; then
    dither=$(bashio::config 'dither')
    options+=(--dither "${dither}")
fi

# Initial volume
if bashio::config.has_value 'initial-volume'; then
    initial_volume=$(bashio::config 'initial-volume')
    if [[ "$initial_volume" =~ ^[0-9]+$ ]]; then
        options+=(--initial-volume "${initial_volume}")
    else
        bashio::log.warning "Invalid initial-volume, using default of 50"
        options+=(--initial-volume "50")
    fi
fi

# Enable volume normalisation
if bashio::config.has_value 'enable-volume-normalisation' && bashio::config.true 'enable-volume-normalisation'; then
    options+=(--enable-volume-normalisation)
fi

# Autoplay
if bashio::config.has_value 'autoplay' && bashio::config.true 'autoplay'; then
    options+=(--autoplay)
fi

# Are we running in debug mode?
if bashio::debug; then
    options+=(--verbose)
fi

# Run librespot
exec librespot "${options[@]}"
